{"version":3,"sources":["components/routing/PrivateRoute.js","components/screens/SidebarData.js","components/screens/Navbar.js","components/pages/Section1.png","components/pages/Section2.png","components/pages/Section3.png","components/pages/Home.js","components/pages/tasksdata.js","components/pages/Tasks.js","components/screens/PrivateScreen.js","components/screens/LoginScreen.js","components/screens/RegisterScreen.js","components/screens/ForgotPasswordScreen.js","components/screens/ResetPasswordScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","SidebarData","title","path","icon","cName","Navbar","useState","sidebar","setSidebar","showSidebar","Provider","value","color","className","onClick","map","item","index","Home","src","Section1","alt","Section2","Section3","tasksdata","id","taskNo","deadline","taskLink","Tasks","updateTask","e","a","setState","prevState","obj","state","Object","assign","console","log","err","selectTask","task","handleChange","target","name","handleSubmit","preventDefault","submitted","onSubmit","this","type","disabled","size","minlength","onChange","required","width","colSpan","href","rel","React","PrivateScreen","history","error","setError","privateData","setPrivateData","useEffect","push","fetchPrivateDate","config","headers","Authorization","axios","get","data","removeItem","exact","LoginScreen","email","setEmail","password","setPassword","loginHandler","post","setItem","token","response","setTimeout","htmlFor","placeholder","tabIndex","autoComplete","RegisterScreen","username","setUsername","confirmpassword","setConfirmPassword","registerHandler","ForgotPasswordScreen","success","setSuccess","forgotPasswordHandler","ResetPasswordScreen","match","confirmPassword","resetPasswordHandler","put","params","resetToken","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c35ae3f.chunk.js","sourcesContent":["import {Redirect, Route} from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest}) => {\r\n    return(\r\n        <Route \r\n        {...rest}\r\n        render= {(props) => \r\n            localStorage.getItem(\"authToken\") ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\n\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: \"Home\",\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: \"Tasks\",\r\n        path: '/tasks',\r\n        icon: <FaIcons.FaTasks />,\r\n        cName: 'nav-text'\r\n    }\r\n];","import React, { useState } from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport { SidebarData } from './SidebarData';\r\nimport './Navbar.css';\r\nimport { IconContext } from 'react-icons';\r\n\r\nfunction Navbar() {\r\n    const [sidebar, setSidebar] = useState(false);\r\n\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{ color: '#fff' }}>\r\n                <div className='navbar' >\r\n                    <Link to='#' className='menu-bars'>\r\n                        <span onClick={showSidebar}>Menu</span>\r\n                    </Link>\r\n                </div>\r\n                <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n                    <ul className='nav-menu-items' onClick={showSidebar} >\r\n                        {/* <li className='navbar-toggle'>\r\n                            <Link to='#' className='menu-bars'>\r\n                                <AiIcons.AiOutlineClose  color=\"white\"/>\r\n                            </Link>\r\n                        </li> */}\r\n                        {SidebarData.map((item, index) => {\r\n                            return (\r\n                                <li key={index} className={item.cName}>\r\n                                    <Link to={item.path} >\r\n                                        {item.icon}\r\n                                        <span>{item.title}</span>                        \r\n                                    </Link>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/Section1.7c519ae0.png\";","export default __webpack_public_path__ + \"static/media/Section2.a058fe3d.png\";","export default __webpack_public_path__ + \"static/media/Section3.948c188e.png\";","import React from 'react';\r\nimport Section1 from './Section1.png';\r\nimport Section2 from './Section2.png';\r\nimport Section3 from './Section3.png';\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport './home.css';\r\n\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className='home'>\r\n            <div className='container'>\r\n                <div><img className=\"image\" src={Section1} alt=\"Section1\" /></div>\r\n                <div><span className=\"text\">A digital way to submit all  your tasks in one place</span></div>\r\n            </div>\r\n            <div className='container'>\r\n                <div><span className=\"text\">Watch out for deadlines. &nbsp;&nbsp;&nbsp; Be productive and complete tasks on time.</span></div>\r\n                <div><img className=\"image\" src={Section2} alt=\"Section2\" /></div>\r\n            </div>\r\n            <div className='container'>\r\n                <div><img className=\"image\" src={Section3} alt=\"Section3\" /></div>\r\n                <div><span className=\"text\">Never worry about losing physical documents anymore</span></div>\r\n            </div>\r\n            <div className=\"footer-text\">TASKER<GiIcons.GiRunningNinja color=\"black\"/><br></br>© 2017 - 2021</div>\r\n            <div className='footer'></div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","let tasksdata = [\r\n    {\r\n        id: \"0\",\r\n        taskNo : \"1\",\r\n        title: \"Create a basic useState form\",\r\n        deadline: \"12/05/2021\",\r\n        taskLink: \"\"\r\n    },\r\n    {\r\n        id: \"1\",\r\n        taskNo : \"2\",\r\n        title: \"Dynamic pagination\",\r\n        deadline: \"16/06/2021\",\r\n        taskLink: \"\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        taskNo : \"3\",\r\n        title: \"Execute basic queries in MySQL and MongoDB\",\r\n        deadline: \"05/07/2021\",\r\n        taskLink: \"\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        taskNo : \"4\",\r\n        title: \"Create a CRUD application\",\r\n        deadline: \"27/07/2021\",\r\n        taskLink: \"\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        taskNo : \"5\",\r\n        title: \"Build a Zendesk clone\",\r\n        deadline: \"15/08/2021\",\r\n        taskLink: \"\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        taskNo : \"6\",\r\n        title: \"Create a login & registration page using node and mongodb\",\r\n        deadline: \"03/09/2021\",\r\n        taskLink: \"\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        taskNo : \"7\",\r\n        title: \"Hackathon task\",\r\n        deadline: \"29/09/2021\",\r\n        taskLink: \"\"\r\n    }\r\n\r\n];\r\n\r\n\r\nexport default tasksdata;\r\n","import React from 'react'\r\nimport './tasks.css';\r\nimport tasksdata from './tasksdata';\r\nimport { FaLink } from \"react-icons/fa\";\r\n\r\n\r\nclass Tasks extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        tasksdata,\r\n        taskNo:\"\",\r\n        taskLink:\"\",\r\n        submitted: false\r\n      };\r\n    }\r\n  \r\n    updateTask = async (e) => {\r\n      try {\r\n\r\n        \r\n\r\n        // tasksdata[this.state.taskNo - 1].taskLink = this.state.taskLink;\r\n        this.setState(prevState => ({\r\n          tasksdata: prevState.tasksdata.map(\r\n          obj => (obj.taskNo === this.state.taskNo ? Object.assign(obj, { taskLink: this.state.taskLink }) : obj)\r\n        )\r\n      }));\r\n      \r\n      console.log(this.state.tasksdata);\r\n        this.setState({taskNo: \"\", taskLink: \"\" });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n  \r\n    selectTask = (task) => this.setState({ ...task });\r\n  \r\n    handleChange = (e) => {\r\n      // { target: { name, value } }\r\n      // this.setState({ [name]: value });\r\n      this.setState({[e.target.name]: e.target.value});\r\n    };\r\n  \r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(\"Submitted...\");\r\n        this.updateTask();\r\n    };\r\n  \r\n    render() {\r\n      return (\r\n        <div className='task-container' >\r\n          <form onSubmit={this.handleSubmit}>\r\n              <label>Task no&nbsp;</label>&nbsp;&nbsp;&nbsp;\r\n              <input\r\n                type=\"number\"\r\n                className=\"taskno-input\"\r\n                name=\"taskNo\"\r\n                value={this.state.taskNo}\r\n                disabled\r\n              />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <label> Task Work Link  &nbsp;</label>&nbsp;&nbsp;&nbsp;\r\n              <input\r\n                size=\"70\"\r\n                type=\"text\"\r\n                className=\"link-input\"\r\n                minlength=\"5\"\r\n                name=\"taskLink\"\r\n                value={this.state.taskLink}\r\n                onChange={this.handleChange}\r\n                required\r\n              />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <button className=\"submit-btn\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n            <br></br>\r\n          </form>\r\n          <br/>\r\n          <br/>\r\n          <table className=\"task-table\">\r\n            <thead>\r\n              <tr>\r\n                <th width=\"3%\" className=\"text-center\">S.No:</th>\r\n                <th width=\"30%\" className=\"text-center\">Title</th>\r\n                <th width=\"7%\" className=\"text-center\">Deadline</th>\r\n                <th width=\"30%\" className=\"text-center\">Task work link</th>\r\n                <th width=\"6%\" className=\"text-center\" colSpan=\"4\">Add work</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.tasksdata.map((task) => {\r\n                return (\r\n                  <tr key={task.id}>\r\n                    <td className=\"text-center\">{task.taskNo}</td>\r\n                    <td className=\"text-center\">{task.title}</td>\r\n                    <td className=\"text-center\">{task.deadline}</td>\r\n                    <td className=\"text-center\"><a className=\"links\" href={task.taskLink} target=\"_blank\" rel=\"noreferrer\">{task.taskLink}</a></td> \r\n                    <td>\r\n                      <button className=\"addwork-btn\" onClick={() => this.selectTask(task)}><FaLink /></button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  export default Tasks;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Navbar from './Navbar';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport \"./PrivateScreen.css\";\r\nimport Home from '../pages/Home';\r\nimport Tasks from '../pages/Tasks';\r\n\r\n\r\nconst PrivateScreen = ({history}) => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n\r\n    if(!localStorage.getItem(\"authToken\")){\r\n      history.push(\"./login\")\r\n    }\r\n\r\n    const fetchPrivateDate = async () => {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n      try {\r\n        const { data } = await axios.get(\"https://tasksubmissionapp.herokuapp.com/api/private\", config);\r\n        setPrivateData(data.data);\r\n      } catch (error) {\r\n        localStorage.removeItem(\"authToken\");\r\n        setError(\"You are not authorized please login\");\r\n      }\r\n    };\r\n\r\n    fetchPrivateDate();\r\n  }, [history]);\r\n\r\n  console.log(privateData);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"authToken\");\r\n    history.push(\"/login\");\r\n  };\r\n  \r\n  return error ? (\r\n    <>\r\n    <span className=\"error-message\">{error}</span>\r\n    </>\r\n  ) : (\r\n    <>\r\n    <div className=\"header\">\r\n      <div><span className='brandname'>TASKER</span><GiIcons.GiRunningNinja className='logo'/></div>\r\n      <div><button className=\"logout-btn\" onClick={logoutHandler}>Logout</button></div>\r\n    </div>\r\n      <Router>\r\n        <Navbar/>\r\n        <Switch>\r\n          <Route path='/' exact component={Home}/>\r\n          <Route path='/tasks' component={Tasks}/>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateScreen;\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LoginScreen.css\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://tasksubmissionapp.herokuapp.com/api/auth/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <form onSubmit={loginHandler} className=\"login-screen__form\">\r\n        <h3 className=\"login-screen__title\">TASKER<GiIcons.GiRunningNinja color=\"black\"/></h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            tabIndex={1}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">\r\n            Password:{\" \"}\r\n            <Link to=\"/forgotpassword\" className=\"login-screen__forgotpassword\">\r\n              Forgot Password?\r\n            </Link>\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            tabIndex={2}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Login\r\n        </button>\r\n\r\n        <span className=\"login-screen__subtext\">\r\n          Don't have an account? <Link to=\"/register\">Register</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RegisterScreen.css\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmpassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://tasksubmissionapp.herokuapp.com/api/auth/register\",\r\n        {\r\n          username,\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-screen\">\r\n      <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n        <h3 className=\"register-screen__title\">TASKER<GiIcons.GiRunningNinja color=\"black\"/></h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            id=\"name\"\r\n            placeholder=\"Enter username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmpassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Register\r\n        </button>\r\n\r\n        <span className=\"register-screen__subtext\">\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport \"./ForgotPasswordScreen.css\";\r\n\r\nconst ForgotPasswordScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const forgotPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://tasksubmissionapp.herokuapp.com/api/auth/forgotpassword\",\r\n        { email },\r\n        config\r\n      );\r\n\r\n      setSuccess(data.data);\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setEmail(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgotpassword-screen\">\r\n      <form\r\n        onSubmit={forgotPasswordHandler}\r\n        className=\"forgotpassword-screen__form\"\r\n      >\r\n        <h3 className=\"forgotpassword-screen__title\">TASKER<GiIcons.GiRunningNinja color=\"black\"/></h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        {success && <span className=\"success-message\">{success}</span>}\r\n        <div className=\"form-group\">\r\n          <p className=\"forgotpassword-screen__subtext\">\r\n            Please enter the registered email to receive reset password email\r\n          </p>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Send Email\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordScreen;","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\n\r\nimport \"./ResetPasswordScreen.css\";\r\n\r\nconst ResetPasswordScreen = ({match}) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const resetPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmPassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords don't match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `https://tasksubmissionapp.herokuapp.com/api/auth/resetpassword/${match.params.resetToken}`,\r\n        {password},\r\n        config\r\n      );\r\n\r\n      setSuccess(data.data);\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"resetpassword-screen\">\r\n      <form\r\n        onSubmit={resetPasswordHandler}\r\n        className=\"resetpassword-screen__form\"\r\n      >\r\n        <h3 className=\"resetpassword-screen__title\">TASKER<GiIcons.GiRunningNinja color=\"black\"/></h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        {success && (\r\n          <span className=\"success-message\">\r\n            {success} <Link className=\"link\" to=\"/login\"><span>&nbsp;</span>\"Login\"</Link>\r\n          </span>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            autoComplete=\"true\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            placeholder=\"Confirm new password\"\r\n            autoComplete=\"true\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordScreen;","import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\n// Routing\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\n// Screens\nimport PrivateScreen from \"./components/screens/PrivateScreen\";\nimport LoginScreen from \"./components/screens/LoginScreen\";\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\nimport ForgotPasswordScreen from \"./components/screens/ForgotPasswordScreen\";\nimport ResetPasswordScreen from \"./components/screens/ResetPasswordScreen\";\n\n\n\nconst App = () => {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n        <PrivateRoute exact path=\"/\" component={PrivateScreen} />\n        <Route exact path=\"/login\" component={LoginScreen}/>\n        <Route exact path=\"/register\" component={RegisterScreen}/>\n        <Route exact path=\"/forgotpassword\" component={ForgotPasswordScreen}/>\n        <Route exact path=\"/resetpassword/:resetToken\" component={ResetPasswordScreen}/>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}